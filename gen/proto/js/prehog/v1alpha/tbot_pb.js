// source: prehog/v1alpha/tbot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.prehog.v1alpha.SubmitTbotEventRequest', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitTbotEventRequest.EventCase', null, global);
goog.exportSymbol('proto.prehog.v1alpha.SubmitTbotEventResponse', null, global);
goog.exportSymbol('proto.prehog.v1alpha.TbotStartEvent', null, global);
goog.exportSymbol('proto.prehog.v1alpha.TbotStartEvent.RunMode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.TbotStartEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.TbotStartEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.TbotStartEvent.displayName = 'proto.prehog.v1alpha.TbotStartEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SubmitTbotEventRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.prehog.v1alpha.SubmitTbotEventRequest.oneofGroups_);
};
goog.inherits(proto.prehog.v1alpha.SubmitTbotEventRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SubmitTbotEventRequest.displayName = 'proto.prehog.v1alpha.SubmitTbotEventRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prehog.v1alpha.SubmitTbotEventResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prehog.v1alpha.SubmitTbotEventResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prehog.v1alpha.SubmitTbotEventResponse.displayName = 'proto.prehog.v1alpha.SubmitTbotEventResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.TbotStartEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.TbotStartEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.TbotStartEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    runMode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    joinType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    helper: jspb.Message.getFieldWithDefault(msg, 4, ""),
    helperVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    destinationsOther: jspb.Message.getFieldWithDefault(msg, 6, 0),
    destinationsDatabase: jspb.Message.getFieldWithDefault(msg, 7, 0),
    destinationsKubernetes: jspb.Message.getFieldWithDefault(msg, 8, 0),
    destinationsApplication: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.TbotStartEvent}
 */
proto.prehog.v1alpha.TbotStartEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.TbotStartEvent;
  return proto.prehog.v1alpha.TbotStartEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.TbotStartEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.TbotStartEvent}
 */
proto.prehog.v1alpha.TbotStartEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.prehog.v1alpha.TbotStartEvent.RunMode} */ (reader.readEnum());
      msg.setRunMode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setJoinType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelper(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHelperVersion(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDestinationsOther(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDestinationsDatabase(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDestinationsKubernetes(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDestinationsApplication(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.TbotStartEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.TbotStartEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.TbotStartEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRunMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getJoinType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHelper();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHelperVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDestinationsOther();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getDestinationsDatabase();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDestinationsKubernetes();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDestinationsApplication();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.prehog.v1alpha.TbotStartEvent.RunMode = {
  RUN_MODE_UNSPECIFIED: 0,
  RUN_MODE_ONE_SHOT: 1,
  RUN_MODE_DAEMON: 2
};

/**
 * optional RunMode run_mode = 1;
 * @return {!proto.prehog.v1alpha.TbotStartEvent.RunMode}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getRunMode = function() {
  return /** @type {!proto.prehog.v1alpha.TbotStartEvent.RunMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.prehog.v1alpha.TbotStartEvent.RunMode} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setRunMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string join_type = 3;
 * @return {string}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getJoinType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setJoinType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string helper = 4;
 * @return {string}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getHelper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setHelper = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string helper_version = 5;
 * @return {string}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getHelperVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setHelperVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 destinations_other = 6;
 * @return {number}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getDestinationsOther = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setDestinationsOther = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 destinations_database = 7;
 * @return {number}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getDestinationsDatabase = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setDestinationsDatabase = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 destinations_kubernetes = 8;
 * @return {number}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getDestinationsKubernetes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setDestinationsKubernetes = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 destinations_application = 9;
 * @return {number}
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.getDestinationsApplication = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.prehog.v1alpha.TbotStartEvent} returns this
 */
proto.prehog.v1alpha.TbotStartEvent.prototype.setDestinationsApplication = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.oneofGroups_ = [[3]];

/**
 * @enum {number}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.EventCase = {
  EVENT_NOT_SET: 0,
  START: 3
};

/**
 * @return {proto.prehog.v1alpha.SubmitTbotEventRequest.EventCase}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.getEventCase = function() {
  return /** @type {proto.prehog.v1alpha.SubmitTbotEventRequest.EventCase} */(jspb.Message.computeOneofCase(this, proto.prehog.v1alpha.SubmitTbotEventRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SubmitTbotEventRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SubmitTbotEventRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    distinctId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    start: (f = msg.getStart()) && proto.prehog.v1alpha.TbotStartEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SubmitTbotEventRequest;
  return proto.prehog.v1alpha.SubmitTbotEventRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SubmitTbotEventRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistinctId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = new proto.prehog.v1alpha.TbotStartEvent;
      reader.readMessage(value,proto.prehog.v1alpha.TbotStartEvent.deserializeBinaryFromReader);
      msg.setStart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SubmitTbotEventRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SubmitTbotEventRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistinctId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getStart();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.prehog.v1alpha.TbotStartEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional string distinct_id = 1;
 * @return {string}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.getDistinctId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.setDistinctId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TbotStartEvent start = 3;
 * @return {?proto.prehog.v1alpha.TbotStartEvent}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.getStart = function() {
  return /** @type{?proto.prehog.v1alpha.TbotStartEvent} */ (
    jspb.Message.getWrapperField(this, proto.prehog.v1alpha.TbotStartEvent, 3));
};


/**
 * @param {?proto.prehog.v1alpha.TbotStartEvent|undefined} value
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest} returns this
*/
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.setStart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.prehog.v1alpha.SubmitTbotEventRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prehog.v1alpha.SubmitTbotEventRequest} returns this
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.clearStart = function() {
  return this.setStart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prehog.v1alpha.SubmitTbotEventRequest.prototype.hasStart = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prehog.v1alpha.SubmitTbotEventResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prehog.v1alpha.SubmitTbotEventResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prehog.v1alpha.SubmitTbotEventResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitTbotEventResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prehog.v1alpha.SubmitTbotEventResponse}
 */
proto.prehog.v1alpha.SubmitTbotEventResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prehog.v1alpha.SubmitTbotEventResponse;
  return proto.prehog.v1alpha.SubmitTbotEventResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prehog.v1alpha.SubmitTbotEventResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prehog.v1alpha.SubmitTbotEventResponse}
 */
proto.prehog.v1alpha.SubmitTbotEventResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prehog.v1alpha.SubmitTbotEventResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prehog.v1alpha.SubmitTbotEventResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prehog.v1alpha.SubmitTbotEventResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prehog.v1alpha.SubmitTbotEventResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.prehog.v1alpha);
